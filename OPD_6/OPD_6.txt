	ORG 0x0000;  	initialisation of interrupt vectors
V0: 	WORD	$DEFAULT, 0x180 ; #V0
V1: 	WORD	$DEFAULT, 0x180 ; #V1
V2: 	WORD	$INT2, 0x180 ; # interrupt vector for external device 2
V3: 	WORD	$INT3, 0x180 ; # interrupt vector for external device 3
V4: 	WORD	$DEFAULT, 0x180 ; #V4
V5: 	WORD	$DEFAULT, 0x180 ; #V5
V6: 	WORD	$DEFAULT, 0x180 ; #V6
V7: 	WORD	$DEFAULT, 0x180 ; #V7
DEFAULT:	IRET	; just return
	ORG 0x045
X:	WORD	0x003E; variable
MIN:	WORD	0xFFC0;
MAX:	WORD	0x003F; 
START:	DI
	CLA
	OUT 0x1
	OUT 0x3
	OUT 0xB
	OUT 0xD
	OUT 0x11
	OUT 0x15
	OUT 0x19
	OUT 0x1D
	LD #0xA; 	Load MR - AC
	OUT 5;	ED2
	LD #0xB;
	OUT 7;	ED3
	EI
PROG:
	DI
	LD X
	DEC
	DEC
	CALL ODZ
	ST X
	EI
	JUMP PROG
INT2:
	DI
	HLT
	PUSH
	IN 4
	OR X
	NOT
	ST X
	POP
	HLT
	EI
	IRET
INT3:
	DI
	NOP
	PUSH
	LD X
	ASL
	OUT 6
	LD X
	HLT
	POP
	EI
	IRET

ODZ:	;	 Check1, check2, load if need
MORE_THAN_MAX:
	CMP MAX
	BMI LESS_THAN_MIN
	JUMP LOAD_MAX
LESS_THAN_MIN:
	CMP MIN
	BPL RETURN
	JUMP RETURN
LOAD_MAX:
	LD MAX
RETURN:
	RET